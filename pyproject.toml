[project]
name = "meltanolabs-target-csv"
dynamic = ["version"]
description = "Singer target for CSV, built with the Meltano SDK for Singer Targets."
authors = [{ name = "Meltano", email = "hello@meltano.com" }]
requires-python = ">=3.10"
readme = "README.md"
license = "Apache-2.0"
keywords = [
    "CSV",
    "Singer",
    "ELT",
    "ETL",
    "Meltano",
    "Meltano SDK",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.15",
]
dependencies = [
    "pytz~=2025.1",
    "singer-sdk~=0.50.2",
]

[project.scripts]
target-csv = "meltanolabs_target_csv.target:TargetCSV.cli"

[dependency-groups]
dev = [
    { include-group = "test"},
]
test = [
    "pytest~=8.3",
    "pytest-github-actions-annotate-failures>=0.3.0",
    "singer-sdk[testing]",
]

[build-system]
requires = ["hatchling>=1.27,<2.0", "hatch-vcs>=0.5,<1"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
ignore = [
    "ANN401", # Allow `typing.Any` as parameter type
]
select = [
    "ANN",  # flake8-annotations
    "C90",  # mccabe
    "D",    # pydocstyle
    "E",    # pycodestyle (error)
    "F",    # pyflakes
    "FA",   # flake8-future-annotations
    "FURB", # refurb
    "PERF", # Perflint
    "UP",   # pyupgrade
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TC",   # flake8-type-checking
    "W",    # pycodestyle (warning)
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["ANN", "D1", "S101"]

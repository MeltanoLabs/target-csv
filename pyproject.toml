[tool.poetry]
name = "meltanolabs-target-csv"
version = "0.0.0"
description = "Singer target for CSV, built with the Meltano SDK for Singer Targets."
authors = ["Meltano <hello@meltano.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = [
    "CSV",
    "Singer",
    "ELT",
    "ETL",
    "Meltano",
    "Meltano SDK",
]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[tool.poetry.dependencies]
python = ">=3.9"
pytz = "~=2025.1"
singer-sdk = "~=0.45.0"

[tool.poetry.group.dev.dependencies]
pytest = "~=8.3"
singer-sdk = { version = "*", extras = ["testing"] }

[tool.poetry.scripts]
target-csv = 'meltanolabs_target_csv.target:TargetCSV.cli'

[build-system]
requires = ["poetry-core>=2.1.1", "poetry-dynamic-versioning>=1.8.2"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
ignore = [
    "ANN401", # Allow `typing.Any` as parameter type
]
select = [
    "ANN",  # flake8-annotations
    "C90",  # mccabe
    "D",    # pydocstyle
    "E",    # pycodestyle (error)
    "F",    # pyflakes
    "FA",   # flake8-future-annotations
    "FURB", # refurb
    "PERF", # Perflint
    "UP",   # pyupgrade
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "TC",   # flake8-type-checking
    "W",    # pycodestyle (warning)
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["ANN", "D1", "S101"]
